import asyncio
import subprocess
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from dotenv import load_dotenv
import os
from bitrix_deals_report import create_deals_report
import logging

load_dotenv()
bot = Bot(token=os.getenv("FINANCE_TOKEN"))
dp = Dispatcher()

# üìÑ –ò–º—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ PDF —Ñ–∞–π–ª–∞
REPORT_FILENAME = "bitrix_deals_report.pdf"

# üìå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher()

# üìå /start ‚Äî —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
@dp.message(Command("start"))
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data="get_report")]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–π –æ—Ç—á–µ—Ç –ø–æ —Å–¥–µ–ª–∫–∞–º:", reply_markup=keyboard)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
@dp.callback_query()
async def handle_callback(callback_query: types.CallbackQuery):
    if callback_query.data == "get_report":
        await callback_query.answer("‚è≥ –§–æ—Ä–º–∏—Ä—É—é –æ—Ç—á–µ—Ç...")

        try:
            # üìÑ –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –≤—ã–∑–≤–∞–≤ —Ñ—É–Ω–∫—Ü–∏—é
            create_deals_report(REPORT_FILENAME)

            # üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await bot.send_document(
                chat_id=callback_query.from_user.id,
                document=types.FSInputFile(REPORT_FILENAME)
            )

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
            await bot.send_message(chat_id=callback_query.from_user.id, text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞.")

# üìå –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
